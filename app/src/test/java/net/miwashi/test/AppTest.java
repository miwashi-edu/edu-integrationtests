/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package net.miwashi.test;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;

class AppTest {

    @BeforeAll
    public static void setup() {
        RestAssured.baseURI = "http://localhost:3000";
    }

    @Test void appHasAGreeting() {
        given().when().get("http:localhost:3010/secret").then().log().all();
    }

    @Test
    public void secretShouldRequireAuthorize() {
        assertTrue(true, "True must be true!");
        /*
        Response response = given()
                .contentType(ContentType.JSON)
                .when()
                .get("/secret")
                .then()
                .extract().response();

        assertEquals(401, response.statusCode(),"Secret must return 401 without JWT token!");
         */
    }

    @Test
    public void authenticateShouldReturnJWT() {
        assertTrue(true, "True must be true!");
        /*
        String requestBody = "{\"username\":\"anyname\"}";
        Response response = given()
                .header("Content-type", "application/json")
                .and()
                .body(requestBody)
                .when()
                .post("/authenticate")
                .then()
                .extract().response();

        assertEquals(200, response.statusCode(), "Authenticate should return status HTTP_OK!");
        assertNotNull(response.jsonPath().getString("accessToken"), "Authenticate should return accessToken!");
        assertNotNull(response.jsonPath().getString("refreshToken"), "Authenticate should return refreshToken!");
         */
    }
}
